name: "Deploy"

on:
  pull_request:
    branches:
      - main
    paths:
      - "iac/terraform/**"
  workflow_dispatch:   

env:
  LOCATION: ${{ secrets.LOCATION }}
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  WORKDIR: "iac/terraform"

defaults:
  run:
    shell: bash
    working-directory: "iac/terraform"

jobs:
  preview:
    name: Preview Changes
    runs-on: ubuntu-latest
    outputs:
      RESOURCES_PREFIX: ${{ steps.resources_prefix.outputs.result }}
      SQL_PASSWORD: ${{ steps.sql_password.outputs.password  }}
      TFPLAN_EXITCODE: ${{ steps.tfplan.outputs.exit_code }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get repo name
        uses: actions/github-script@v5
        id: resources_prefix
        with:
          result-encoding: string
          script: return context.repo.repo.toLowerCase()

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
          
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config=resource_group_name="${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}" \
            -backend-config=storage_account_name="${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config=container_name="${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME }}" \
            -backend-config=key="${{ secrets.TFSTATE_KEY }}"
     
      - uses: Azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }
            
      - name: Get Secrets from KV
        uses: Azure/get-keyvault-secrets@v1
        with:
         keyvault: "${{ steps.resources_prefix.outputs.result }}kv" 
         secrets: 'SQL-PASSWORD' 
         id: sql_password
    
      - name: Terraform Plan
        id: tfplan
        continue-on-error: true
        shell: bash +e {0}
        run: |
          terraform plan \
            --detailed-exitcode \
            -var="location=${LOCATION}" \
            -var="resources_prefix=${{ steps.resources_prefix.outputs.result }}" \
            -var="mssql_server_administrator_login_password=${{ steps.sql_password.outputs.password }}"
          echo "::set-output name=exit_code::$?"
      - name: check exit code
        if: always()
        run: |
          echo "exit_code : ${{ steps.tfplan.outputs.exit_code }}"
  deploy:
    name: Deploy Changes
    runs-on: ubuntu-latest
    needs: preview
    if: needs.preview.outputs.TFPLAN_EXITCODE != 0
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
      - name: Initialize terraform
        run: |
          terraform init \
            -backend-config=resource_group_name="${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}" \
            -backend-config=storage_account_name="${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config=container_name="${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME }}" \
            -backend-config=key="${{ secrets.TFSTATE_KEY }}"
      - name: Terraform Apply
        run: |
          terraform apply \
            -auto-approve \
            -var="location=${{ secrets.LOCATION }}" \
            -var="resources_prefix=${{ needs.preview.outputs.RESOURCES_PREFIX }}" \
            -var="mssql_server_administrator_login_password=${{ needs.preview.outputs.SQL_PASSWORD }}"
