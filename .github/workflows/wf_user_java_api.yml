# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build & Test

on:
  pull_request:
    branches:
      - main
    paths:
      - "apis/user-java/**"
  workflow_dispatch:


defaults:
  run:
    working-directory: "apis/user-java"
    
jobs:

  scanning:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GIT_ACCESS_TOKEN }}
          
  buildtest:
    name: "Build and Test"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
  
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: "Run Tests with Maven"
      run: mvn test     
      

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
          report_paths: '**/build/test-results/test/TEST-*.xml'      
      
    
    - name: "Create an issue (bug)"
      if: failure() && github.event_name != 'pull_request'
      run: |
          body='### Unit Test `failure`
          <details>
          <summary>Workflow details</summary>
          Workflow name: `${{ github.workflow }}`
          Action: `${{ github.event_name }}`
          Job: `${{ github.job }}`
          </details>
          Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Pusher: @${{ github.actor }}'
          title='Unit Tests failure'
          gh issue create --title "${title}" --body "${body}" --label bug --assignee ${{ github.actor }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # If it encounts error, creates issue and comments to PR.
    - name: Comment PR
      if: failure() && github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v2
      with:
          issue-number: ${{ github.event.number }}
          body: |
            ## Unit test failure
            Workflow details
            * Workflow name: ${{ github.workflow }}
            * Action: ${{ github.event_name }}
            * Job: ${{ github.job }}
            * PR: ${{ github.event.number }}
            Test details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Pusher: ${{ github.actor }}
            
            gh pr comment ${{ github.event.number }} --body "${body}"
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
