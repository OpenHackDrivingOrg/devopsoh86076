# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build & Test

on:
  pull_request:
    branches:
      - main
    paths:
      - "apis/user-java/**"
  workflow_dispatch:

defaults:
  run:
    working-directory: "apis/user-java"
    
jobs:
  buildtest:
    name: "Build and Test"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
  
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: "Run Tests with Maven"
      run: mvn test     
      

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
          report_paths: '**/build/test-results/test/TEST-*.xml'      
      
    - name: Run Gitleaks
      id: gitleaks
      uses: DariuszPorowski/github-action-gitleaks@v2
      with:
       report_format: "sarif"
       fail: false

    - name: Get the output from the gitleaks step
      run: |
        echo "exitcode: ${{ steps.gitleaks.outputs.exitcode }}"
        echo "result: ${{ steps.gitleaks.outputs.result }}"
        echo "output: ${{ steps.gitleaks.outputs.output }}"
        echo "command: ${{ steps.gitleaks.outputs.command }}"
        echo "report: ${{ steps.gitleaks.outputs.report }}"

    - name: Upload Gitleaks SARIF report to code scanning service
      if: steps.gitleaks.outputs.exitcode == 1
      uses: github/codeql-action/upload-sarif@v2
      with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: my-analysis-tool
        

    - name: "Create an issue (bug)"
      if: failure() && github.event_name != 'pull_request'
      run: |
          body='### Unit Test `failure`
          <details>
          <summary>Workflow details</summary>
          Workflow name: `${{ github.workflow }}`
          Action: `${{ github.event_name }}`
          Job: `${{ github.job }}`
          </details>
          Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Pusher: @${{ github.actor }}'
          title='Unit Tests failure'
          gh issue create --title "${title}" --body "${body}" --label bug --assignee ${{ github.actor }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # If it encounts error, creates issue and comments to PR.
    - name: Comment PR
      if: failure() && github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v2
      with:
          issue-number: ${{ github.event.number }}
          body: |
            ## Unit test failure
            Workflow details
            * Workflow name: ${{ github.workflow }}
            * Action: ${{ github.event_name }}
            * Job: ${{ github.job }}
            * PR: ${{ github.event.number }}
            Test details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Pusher: ${{ github.actor }}
            
            gh pr comment ${{ github.event.number }} --body "${body}"
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
